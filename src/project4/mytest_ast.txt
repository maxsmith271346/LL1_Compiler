ast.Computation(0,0)[main:()->void]
  ast.StatementSequence(3,3)
    ast.Assignment(3,23)
      input:int
      ast.FunctionCall(3,23)[TEMP FUNC:()->int]
        ast.ArgumentList(3,13)
    ast.Assignment(4,32)
      myvar:int
      ast.FunctionCall(4,32)[TEMP FUNC:()->int]
        ast.ArgumentList(4,13)
          input:int
    ast.FunctionCall(6,20)[TEMP FUNC:()->int]
      ast.ArgumentList(6,4)
        myvar:int
    ast.FunctionCall(7,14)[TEMP FUNC:()->int]
      ast.ArgumentList(7,4)
    ast.Assignment(9,35)
      myvar:int
      ast.FunctionCall(9,35)[TEMP FUNC:()->int]
        ast.ArgumentList(9,13)
          input:int
          ast.IntegerLiteral(9,34)[0]
    ast.FunctionCall(11,20)[TEMP FUNC:()->int]
      ast.ArgumentList(11,4)
        myvar:int
    ast.FunctionCall(12,14)[TEMP FUNC:()->int]
      ast.ArgumentList(12,4)

